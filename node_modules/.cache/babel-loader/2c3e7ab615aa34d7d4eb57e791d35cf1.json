{"ast":null,"code":"var _jsxFileName = \"/Users/samgorman/src/portfolio_new/src/containers/connect.js\";\nimport React, { Component } from 'react';\nimport logo from \"../logo.svg\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from \"../components/header\";\nimport Divider from \"../components/divider\";\nimport DividerEnd from \"../components/dividerend\";\nimport Hero from \"../hero\";\nimport FullImage from \"../full-img\";\nimport SmallImage from \"../small-img\";\nimport SplitImage from \"../split-img\";\nimport Paragraph from \"../components/paragraph\";\nimport Title from \"../components/title\";\nimport Quote from \"../components/quote\";\nimport Footer from \"../footer\";\nimport MyNavbar from \"../components/nav\";\n\nclass Connect extends Component {\n  //adding constructor from tut\n  constructor(props) {\n    super(props); //now assign state, and a default value, doesnt matter if i say data\n\n    this.state = {//contacts: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"home-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(MyNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Header, {\n      title: \"Peerlift Connect\",\n      color: \"#FF6D96\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Hero, {\n      textOne: \"Sample text one\",\n      textTwo: \"Pivoted to a platform to connect college students in need\",\n      image: \"./images/pl final.gif\",\n      color: \"#FF6D96\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Quote, {\n      text: \"This case study describes how I redesigned and rebuilt Peerlift, a platform I co-founded to connect high school students to scholarships. Before the rebuild, I scaled Peerlift to 60,000 users over 12 months. Here, I explain the decision to change, how I designed the new product, and how I shipped it in code.\",\n      color: \"#EABA04\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Title, {\n      text: \"Duration\",\n      tag: \"August 2019\",\n      color: \"#EABA04\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"Four weeks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Title, {\n      text: \"Role\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"This was a solo project. I interviewed users, designed hi-fi prototypes on Sketch, then shipped a production web app with a MERN stack (Mongo DB, Express, Node.Js and React) over four weeks.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"Julie Chen helped set the branding with the visual style she created for our images, and very grateful to Shalin Shah, Brian Zeng and Stack Overflow (!) for being on stand-by for questions on React.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Title, {\n      text: \"Motivated students in public high schools have difficulty discovering quality national scholarships to help them afford college.\",\n      tag: \"THE PROBLEM\",\n      color: \"#FF6D96\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Title, {\n      text: \"Users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"I kept my design centered on three real-life Peerlift users.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(SmallImage, {\n      image: \"./images/users@2x.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"Miguel went to a big public high school in Los Angeles, struggled to find scholarships, now attends a UC, and wants to give back to his community. He's an ideal candidate to share content on Peerlift.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"Amel is highly-driven, and is actively looking and apply for scholarships but it takes too much time. She wants a better way to find, search, and win.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"Thalia is motivated for college, but wasn't sure where to start with the college process. Wants to apply to scholarships but not quite sure how to start.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      title: \"Designing a people-powered brand.\",\n      color: \"#1493FF\",\n      textcolor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Title, {\n      text: \"Designing against the status quo.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"The most-visited scholarship sites are cluttered, confusing and clinical.  Students actually hate using them-- no exaggeration.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(SmallImage, {\n      image: \"./images/competition@2x.png\",\n      caption: \"Top competition is cluttered and clinical.  \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Title, {\n      text: \"Your scholarship search, but human \\uD83E\\uDD20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"Think of Peerlift as the Glossier of scholarships.\\xA0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"I wanted to capture the authenticity and community of Glossier with the simplicity of Intercom or Notion.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"Peerlift needed to feel friendly, accessible, like a friend who just offered to help.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"That's why I used real photos of real users and makers of Peerlift on our site. Showing the authentic selves of the people who live and love Peerlift humanizes the brand and builds student-to-student connection.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(Title, {\n      text: \"Moodboard:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(FullImage, {\n      image: \"./images/moodboard@2x.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(SplitImage, {\n      header: \"Radically simple & friendly.\",\n      textOne: \"A brand that talks like a human. \",\n      textTwo: \"Immediately access useful content. \",\n      image: \"./images/mobilehero@2x.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(SmallImage, {\n      image: \"./images/laptop@2x.png\",\n      caption: \"Highlighting how Amel won money on Peerlift helps other students believe they can too.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      title: \"Designing a social product.\",\n      color: \"#1493FF\",\n      textcolor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      title: \"Shipping a web app.\",\n      color: \"#1493FF\",\n      textcolor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"This section gets somewhat technical: I talk about the technical decisions I made and how I actually built the product. However, I'm staying high-level, and won't assume prior knowledge in software. I'm more interested in explaining my process for product-building in this case-study than getting in the weeds of the implementation.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"I made all technical choices through the lens of what would enable me to build the fastest, and what would minimize the amount of code I needed to write. This was my first time shipping a full web app by myself, so there was lots of learning, failing, and Stack Overflow'ing along the way.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(Title, {\n      text: \"Product management\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"I used Notion to spec out this project for myself, and kept running to-do's to stay efficient. I always use a tool like Notion or Asana when I've led small product teams in the past, and found it to be equally useful as an individual.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(SmallImage, {\n      image: \"./images/notion.png\",\n      caption: \"I like to stay organized, and Notion boards like this helped me do that.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(SplitImage, {\n      textOne: \"Each task has corresponding to-do's. \",\n      textTwo: \"All decisions are well-documented for reference.\",\n      image: \"./images/notiontodo.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(Title, {\n      text: \"Front-end framework: React\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"For the front-end of the web-app, I chose React, a popular Javascript framework that enables developers to reuse components and easily manage the relationships between these components.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(Title, {\n      text: \"Back-end framework: Node.js and Express\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"For the back-end of Peerlift, I chose Node.JS, with an Express server. Writing the full-application in Javascript enables easier integration between the front and back-ends of the app. Further, Express, a popular framework for Node.JS, abstracts away many more complicated server-side functions, and enables me to focus on building the app.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(Title, {\n      text: \"Database: MongoDB Atlas with Mongoose\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"I chose MongoDB Atlas for our database\\u200A-\\u200Aa noSQL database-in-the-cloud that offers a flexible data structure for changing data. Previously, I had used mySQL for Peerlift, which has rigid data schemes that limited ability to scale content. Using MongoDB meant I could define flexible data schemas with Mongoose, a popular library that enables definition of data schemas directly in my server-side Node.JS code. Faster development, less code\\u200A-\\u200Aand everyone is happy.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(Title, {\n      text: \"Production: Heroku\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"Finally, I deployed the production-build of Peerlift to Heroku, a platform-as-a-service that enables rapid deployment. Old Peerlift was hosted on Amazon Web Services (AWS), which offers lots of customization, but is often overly complex to ship an early iteration of a product.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), React.createElement(Title, {\n      text: \"Why these technical decisions matter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(Title, {\n      tag: \"FOR USERS\",\n      color: \"#EABA04\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"Waaay faster load-times. Thanks to React, Peerlift was now a single-page-application, or SPA. That means the app only gets loaded once initially, and users then experience near-instantaneous load-times for all subsequent pages afterward. We love a fast website.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(Title, {\n      tag: \"FOR PEERLIFT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"Magnitudes easier to ship new features for users. The reusable nature of React meant that front-end changes are now much easier to make, with less code. No more 5,000 lines of main.css or chain of jQuery functions.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(Title, {\n      tag: \"FOR PEERLIFT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(Paragraph, {\n      text: \"Access to rapid feedback. Using these technologies let me ship the app in three weeks, instead of five or more. I optimized for frameworks that increased productivity and efficiency over frameworks that offered more granular control, but wasted time.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), React.createElement(Divider, {\n      title: \"Learnings\",\n      color: \"#1493FF\",\n      textcolor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(DividerEnd, {\n      color: \"#1493FF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Connect;","map":{"version":3,"sources":["/Users/samgorman/src/portfolio_new/src/containers/connect.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Header","Divider","DividerEnd","Hero","FullImage","SmallImage","SplitImage","Paragraph","Title","Quote","Footer","MyNavbar","Connect","constructor","props","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from '../logo.svg';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from \"../components/header\";\nimport Divider from \"../components/divider\";\nimport DividerEnd from \"../components/dividerend\";\n\nimport Hero from \"../hero\";\nimport FullImage from \"../full-img\";\nimport SmallImage from \"../small-img\";\nimport SplitImage from \"../split-img\";\n\nimport Paragraph from \"../components/paragraph\";\nimport Title from \"../components/title\";\nimport Quote from \"../components/quote\";\nimport Footer from \"../footer\";\nimport MyNavbar from \"../components/nav\";\n\nclass Connect extends Component {\n    //adding constructor from tut\n    constructor(props){\n      super(props);\n      //now assign state, and a default value, doesnt matter if i say data\n      this.state = {\n        //contacts: []\n      };\n    }\n   \n  \n    render() {\n    return (\n  \n      <div className = 'home-wrapper'> \n      <MyNavbar/>\n\n    <Header\n    title = \"Peerlift Connect\"\n    color = \"#FF6D96\"\n    ></Header>\n\n     <Hero\n     textOne = \"Sample text one\"\n     textTwo = \"Pivoted to a platform to connect college students in need\"\n     image = \"./images/pl final.gif\"\n     color = \"#FF6D96\"\n     ></Hero>\n\n     <Quote\n     text = \"This case study describes how I redesigned and rebuilt Peerlift, a platform I co-founded to connect high school students to scholarships. Before the rebuild, I scaled Peerlift to 60,000 users over 12 months. Here, I explain the decision to change, how I designed the new product, and how I shipped it in code.\"\n     color =\"#EABA04\"\n     ></Quote>\n\n    <Title\n    text = \"Duration\"\n    tag = \"August 2019\"\n    color = \"#EABA04\"\n    ></Title>\n\n    <Paragraph\n    text = \"Four weeks\"\n    ></Paragraph>\n\n    <Title\n    text = \"Role\"\n    ></Title>\n\n    <Paragraph\n    text = \"This was a solo project. I interviewed users, designed hi-fi prototypes on Sketch, then shipped a production web app with a MERN stack (Mongo DB, Express, Node.Js and React) over four weeks.\"\n    ></Paragraph>\n\n    <Paragraph\n    text = \"Julie Chen helped set the branding with the visual style she created for our images, and very grateful to Shalin Shah, Brian Zeng and Stack Overflow (!) for being on stand-by for questions on React.\"\n    ></Paragraph>\n\n    <Title\n    text = \"Motivated students in public high schools have difficulty discovering quality national scholarships to help them afford college.\"\n    tag = \"THE PROBLEM\"\n    color = \"#FF6D96\"\n    ></Title>\n\n\n    <Title\n    text = \"Users\"\n    ></Title>\n\n    <Paragraph\n    text = \"I kept my design centered on three real-life Peerlift users.\"\n    ></Paragraph>\n\n    <SmallImage\n    image = \"./images/users@2x.png\"\n    ></SmallImage>\n\n    <Paragraph\n    text = \"Miguel went to a big public high school in Los Angeles, struggled to find scholarships, now attends a UC, and wants to give back to his community. He's an ideal candidate to share content on Peerlift.\"\n    ></Paragraph>\n\n    <Paragraph\n    text = \"Amel is highly-driven, and is actively looking and apply for scholarships but it takes too much time. She wants a better way to find, search, and win.\"\n    ></Paragraph>\n\n    <Paragraph\n    text = \"Thalia is motivated for college, but wasn't sure where to start with the college process. Wants to apply to scholarships but not quite sure how to start.\"\n    ></Paragraph>\n\n    <Divider\n    title = \"Designing a people-powered brand.\"\n    color = \"#1493FF\"\n    textcolor = \"white\"\n    ></Divider>\n\n    <Title\n    text = \"Designing against the status quo.\"\n    ></Title>\n\n    <Paragraph\n    text = \"The most-visited scholarship sites are cluttered, confusing and clinical.  Students actually hate using them-- no exaggeration.\"\n    ></Paragraph>\n\n\n\n    <SmallImage\n    image = \"./images/competition@2x.png\"\n    caption = \"Top competition is cluttered and clinical.  \"\n    ></SmallImage>\n\n\n    <Title\n    text = \"Your scholarship search, but human 🤠\"\n    ></Title>\n\n    <Paragraph\n    text = \"Think of Peerlift as the Glossier of scholarships. \"\n    ></Paragraph>\n\n    <Paragraph\n    text = \"I wanted to capture the authenticity and community of Glossier with the simplicity of Intercom or Notion.\"\n    ></Paragraph>\n\n    <Paragraph\n    text = \"Peerlift needed to feel friendly, accessible, like a friend who just offered to help.\"\n    ></Paragraph>\n\n    <Paragraph\n    text = \"That's why I used real photos of real users and makers of Peerlift on our site. Showing the authentic selves of the people who live and love Peerlift humanizes the brand and builds student-to-student connection.\"\n    ></Paragraph>\n    <Title\n    text = \"Moodboard:\"\n    ></Title>\n      \n    <FullImage\n    image = \"./images/moodboard@2x.png\"\n    ></FullImage>\n\n    <SplitImage\n    header = \"Radically simple & friendly.\"\n    textOne = \"A brand that talks like a human. \"\n    textTwo = \"Immediately access useful content. \"\n\n    image = \"./images/mobilehero@2x.png\"\n    ></SplitImage>\n\n    <SmallImage\n    image = \"./images/laptop@2x.png\"\n    caption = \"Highlighting how Amel won money on Peerlift helps other students believe they can too.\"\n    ></SmallImage>\n\n    \n\n\n\n    <Divider\n    title = \"Designing a social product.\"\n    color = \"#1493FF\"\n    textcolor = \"white\"\n    ></Divider>\n\n    < Divider\n    title = \"Shipping a web app.\"\n    color = \"#1493FF\"\n    textcolor = \"white\"\n    ></Divider>\n\n    <Paragraph\n    text = \"This section gets somewhat technical: I talk about the technical decisions I made and how I actually built the product. However, I'm staying high-level, and won't assume prior knowledge in software. I'm more interested in explaining my process for product-building in this case-study than getting in the weeds of the implementation.\"\n    ></Paragraph>\n\n    <Paragraph\n    text = \"I made all technical choices through the lens of what would enable me to build the fastest, and what would minimize the amount of code I needed to write. This was my first time shipping a full web app by myself, so there was lots of learning, failing, and Stack Overflow'ing along the way.\"\n    ></Paragraph>\n\n    <Title\n    text = \"Product management\"\n    ></Title>\n\n    <Paragraph\n    text = \"I used Notion to spec out this project for myself, and kept running to-do's to stay efficient. I always use a tool like Notion or Asana when I've led small product teams in the past, and found it to be equally useful as an individual.\"\n    ></Paragraph>\n\n\n    <SmallImage\n    image = \"./images/notion.png\"\n    caption = \"I like to stay organized, and Notion boards like this helped me do that.\"\n    ></SmallImage>\n\n    <SplitImage\n    textOne = \"Each task has corresponding to-do's. \"\n    textTwo = \"All decisions are well-documented for reference.\"\n\n    image = \"./images/notiontodo.png\"\n    ></SplitImage>\n\n\n    <Title\n    text = \"Front-end framework: React\"\n    ></Title>\n\n    <Paragraph\n    text = \"For the front-end of the web-app, I chose React, a popular Javascript framework that enables developers to reuse components and easily manage the relationships between these components.\"\n    ></Paragraph>\n\n\n    <Title\n    text = \"Back-end framework: Node.js and Express\"\n    ></Title>\n\n    <Paragraph\n    text = \"For the back-end of Peerlift, I chose Node.JS, with an Express server. Writing the full-application in Javascript enables easier integration between the front and back-ends of the app. Further, Express, a popular framework for Node.JS, abstracts away many more complicated server-side functions, and enables me to focus on building the app.\"\n    >\n    </Paragraph>\n\n    <Title\n    text = \"Database: MongoDB Atlas with Mongoose\"\n    ></Title>\n\n    <Paragraph\n    text = \"I chose MongoDB Atlas for our database - a noSQL database-in-the-cloud that offers a flexible data structure for changing data. Previously, I had used mySQL for Peerlift, which has rigid data schemes that limited ability to scale content. Using MongoDB meant I could define flexible data schemas with Mongoose, a popular library that enables definition of data schemas directly in my server-side Node.JS code. Faster development, less code - and everyone is happy.\"\n    ></Paragraph>\n\n    <Title\n    text = \"Production: Heroku\"\n    ></Title>\n\n    <Paragraph\n    text = \"Finally, I deployed the production-build of Peerlift to Heroku, a platform-as-a-service that enables rapid deployment. Old Peerlift was hosted on Amazon Web Services (AWS), which offers lots of customization, but is often overly complex to ship an early iteration of a product.\"\n    ></Paragraph>\n\n    <Title\n    text = \"Why these technical decisions matter\"\n    ></Title>\n\n    <Title\n    tag = \"FOR USERS\"\n    color = \"#EABA04\"\n    ></Title>\n\n    <Paragraph\n    text = \"Waaay faster load-times. Thanks to React, Peerlift was now a single-page-application, or SPA. That means the app only gets loaded once initially, and users then experience near-instantaneous load-times for all subsequent pages afterward. We love a fast website.\"\n    ></Paragraph>\n\n    <Title\n    tag = \"FOR PEERLIFT\"\n    ></Title>\n\n    <Paragraph\n    text = \"Magnitudes easier to ship new features for users. The reusable nature of React meant that front-end changes are now much easier to make, with less code. No more 5,000 lines of main.css or chain of jQuery functions.\"\n    ></Paragraph>\n\n    <Title\n    tag = \"FOR PEERLIFT\"\n    ></Title>\n\n    <Paragraph\n    text = \"Access to rapid feedback. Using these technologies let me ship the app in three weeks, instead of five or more. I optimized for frameworks that increased productivity and efficiency over frameworks that offered more granular control, but wasted time.\"\n    ></Paragraph>\n\n\n\n\n    < Divider\n    title = \"Learnings\"\n    color = \"#1493FF\"\n    textcolor = \"white\"\n    ></Divider>\n\n    <DividerEnd\n        color = \"#1493FF\"\n\n    ></DividerEnd>\n\n    <Footer/>\n\n      </div>\n    );\n  }\n  }\n  export default Connect;\n  "]},"metadata":{},"sourceType":"module"}